# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1

      # Runs a single command using the runners shell
      - name: install_curl_config
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
      
      - name: make_curl
        run: |
          git clone https://github.com/curl/curl.git
          cd curl
          autoreconf -fi
          ./configure --with-openssl
          make

      - name: setup
        run: |
          wget https://github.com/cosmo-ray/json-search/releases/download/0.1/json-search-x86_64.AppImage
          chmod +x ./json-search-x86_64.AppImage
          cp ./json-search-x86_64.AppImage ./json-search
          gem install ffi
          npm install ffi-napi
          sudo apt-get update --fix-missing
          sudo apt-get install -y -f -o Acquire::Retries=3 libfuse2

      # Runs a set of commands using the runners shell
      - name: Tests
        env:
          OSC_ACCESS_KEY: ${{ secrets.OSC_ACCESS_KEY }}
          OSC_SECRET_KEY: ${{ secrets.OSC_SECRET_KEY }}
        run: |
          export CURL_PATH="$PWD/curl/lib/.libs"
          export PATH="$PATH:$PWD"
          export LD_LIBRARY_PATH="$PWD/curl/lib/.libs"
          export CFLAGS="-I$PWD/curl/include/"
          export LDFLAGS="-L$PWD/curl/lib/.libs/"
          export RUSTFLAGS="-L$PWD/curl/lib/.libs/"
          ./tests.sh
